/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'maven'
    id 'maven-publish'
}

group 'gov.nasa.nas'
version '0.2'

ext.GitHubPackagesClosure = {
    name = 'GitHubPackages'
    url = uri('https://maven.pkg.github.com/HPC-ULL/SBCs-EnergyEfficiency')
    credentials {
        username = project.findProperty('gpr.user') ?: System.getenv('GPR_USER')
        password = project.findProperty('gpr.key') ?: System.getenv('GPR_API_KEY')
    }
}

// helper function to return a "curried" closure
Closure GitHubPackages() {
    return GitHubPackagesClosure.curry()
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenLocal()
    maven GitHubPackages()
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    repositories {
        maven GitHubPackages()
    }
    publications {
        gpr(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

jar {
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Group': project.group,
                'Implementation-Version': project.version,
                'Specification-Title': 'NAS Parallel Benchmarks',
                'Specification-Version': '3.0 Java',
                'Specification-Vendor': 'NASA Advanced Supercomputing Division'
        )
    }
}

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(buildRelease)) {
        compileJava.options.debug = false
    } else if (taskGraph.hasTask(buildDebug)) {
        compileJava.options.debug = true
        project.version = version + '-debug'
    } else if (taskGraph.hasTask(installRelease)) {
        compileJava.options.debug = false
    } else if (taskGraph.hasTask(installDebug)) {
        compileJava.options.debug = true
        project.version = version + '-debug'
        jar.archiveFileName = version + '-debug'
    }
}

task buildRelease(type: GradleBuild, dependsOn: build) {}
task buildDebug(type: GradleBuild, dependsOn: build) {}

task installRelease(type: GradleBuild, dependsOn: install) {}
task installDebug(type: GradleBuild, dependsOn: install) {}

dependencies {
    testImplementation 'junit:junit:4.12'
    implementation 'es.ull.hpcg:matrix-lib:0.5.3-beta-04'
}
